@model DokterPraktekV2.Models.VM_schedules

@{
    ViewBag.Title = "Create";
}

<br />  
<section class="content-header">
    
</section>
<!-- Main content -->
<section class="content">
    <div class="box box-primary">
        <div class="box-header"><h4>Booking Form</h4></div>
        @using (Html.BeginForm("Create", "schedules", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="box-body">
                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.doctors[0].doctorId)
                    <div class="form-group col-md-12">
                        @Html.Label("Patient Name", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.Label("Home Address", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.homeAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.homeAddress, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.Label("Phone Number", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.Label("Patient Gender", htmlAttributes: new { @class = "control-label" })<br />
                        @Html.RadioButton("gender", true) Male &nbsp;
                        @Html.RadioButton("gender", false) Female
                    </div>

                    @*<div class="form-group col-md-12">
                @Html.Label("Patient Photo", htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.photo, new { type="file"})
                @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
            </div>*@

                    @*<div class="form-group col-md-12">
            <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Live Photo</button>
            @Html.Partial("LivePhoto")
            </div>
            //ryan logic photo
                    *@
                    <div class="form-group col-md-12">
                        @Html.Label("Booking Date", htmlAttributes: new { @class = "control-label" })<br />
                        @Html.TextBoxFor(model => model.dateSchedule, htmlAttributes: new { @type = "date", @min = ViewBag.blockDate, htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dateSchedule, "", new { @class = "text-danger" })
                    </div>
                    <div id="par">
                        @*<input type="button" id="stop" name="stop" value="STOP"/>*@
                        @*--------------------------------*@
                        <input type="hidden" name="photos" id="filephoto">
                        @*---------------------------------*@
                        <video id="player" width="550" height="400" controls autoplay></video>
                        <canvas id="canvas" width=320 height=240></canvas>
                        <hr />
                        <a href="#" id="capture" class="btn btn-primary"><i class="fa fa-camera"></i> CAPTURE</a>
                        <a href="#" class="btn btn-success" id="btn-download" download="bookingphoto.png"><i class="fa fa-cloud-download"></i> DOWNLOAD</a>
                        <input type="hidden" name="photo" id="photos" />
                    </div>
                    @* ---------------------------- *@
                    <script>
                                          const player = document.getElementById('player');
                                          const canvas = document.getElementById('canvas');
                                          const context = canvas.getContext('2d');
                                          const captureButton = document.getElementById('capture');
                                          var localstream;
                                          var button = document.getElementById('btn-download');
                                          button.addEventListener('click', function (e) {
                                              var dataURL = canvas.toDataURL('image/png');
                                              button.href = dataURL;
                                          });

                                          const constraints = {
                                            video: true,
                                          };

                                          var image = document.getElementById('photo');
                                          captureButton.addEventListener('click', () => {
                                              var images = context.drawImage(player, 0, 0, canvas.width, canvas.height);
                                                  var ba = document.getElementById('canvas').toDataURL('image/png');
                                                 document.getElementById('photos').src = ba;
                                                    document.getElementById('photos').value = ba.toString();


                                                  console.log(ba);
                                          });

                                          navigator.mediaDevices.getUserMedia(constraints)
                                            .then((stream) => {
                                                player.srcObject = stream;
                                                localstream = player.srcObject;
                                            });
                    //-------------------------DELETE HIDDEN-------------------------------------------
                                          var getStr = window.location.search.substr(1);
                                          var getArray = getStr.split("&");
                                          var get = {};

                                          for (var i = 0; i < getArray.length; i++) {
                                              var tmpArray = getArray[i].split("=");
                                              get[tmpArray[0]] = tmpArray[1];
                                          }
                                          if (/Android|webOS|iPhone|iPod|BlackBerry|IEMobile/i.test(navigator.userAgent)) {

                                              var hidden = document.createAttribute("hidden");

                                              var par = document.getElementById("par");
                                              var filephoto = document.getElementById('filephoto');
                                              var players = document.getElementById("player");
                                              var capture = document.getElementById("capture");
                                              var btndown = document.getElementById("btn-download");
                                              var can = document.getElementById("canvas");

                                              document.getElementById('filephoto').setAttribute("type", "file");
                                              //document.getElementsByTagName('video')[0].removeAttribute('video');
                                              //document.getElementsByTagName('video')[0].removeAttribute('controls');
                                              par.removeChild(players);
                                              par.removeChild(can);
                                              par.removeChild(capture);
                                              par.removeChild(btndown);
                                          }
                    //--------------------
                    </script>
                </div>

                <div class="panel-footer">
                    <div class="form-group">
                        <div class="col-md-offset-10">
                            <a href="/schedules/Select" class="btn btn-default">Back</a> &nbsp;
                            <input type="submit" value="Submit" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
